[{"/Users/seonmin/Documents/react with max/section22/src/index.js":"1","/Users/seonmin/Documents/react with max/section22/src/App.js":"2","/Users/seonmin/Documents/react with max/section22/src/pages/HomePage.js":"3","/Users/seonmin/Documents/react with max/section22/src/pages/AuthPage.js":"4","/Users/seonmin/Documents/react with max/section22/src/components/Layout/Layout.js":"5","/Users/seonmin/Documents/react with max/section22/src/components/Profile/UserProfile.js":"6","/Users/seonmin/Documents/react with max/section22/src/components/Layout/MainNavigation.js":"7","/Users/seonmin/Documents/react with max/section22/src/components/Auth/AuthForm.js":"8","/Users/seonmin/Documents/react with max/section22/src/components/StartingPage/StartingPageContent.js":"9","/Users/seonmin/Documents/react with max/section22/src/components/Profile/ProfileForm.js":"10","/Users/seonmin/Documents/react with max/section22/src/store/auth-context.js":"11"},{"size":353,"mtime":1659282412975,"results":"12","hashOfConfig":"13"},{"size":916,"mtime":1659340813120,"results":"14","hashOfConfig":"13"},{"size":171,"mtime":1620019394000,"results":"15","hashOfConfig":"13"},{"size":130,"mtime":1620019394000,"results":"16","hashOfConfig":"13"},{"size":246,"mtime":1659260488556,"results":"17","hashOfConfig":"13"},{"size":278,"mtime":1620019394000,"results":"18","hashOfConfig":"13"},{"size":1109,"mtime":1659361721916,"results":"19","hashOfConfig":"13"},{"size":3459,"mtime":1659437300931,"results":"20","hashOfConfig":"13"},{"size":240,"mtime":1620019394000,"results":"21","hashOfConfig":"13"},{"size":1439,"mtime":1659285951619,"results":"22","hashOfConfig":"13"},{"size":2576,"mtime":1659364877926,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1f912m5",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/Users/seonmin/Documents/react with max/section22/src/index.js",[],["48","49"],"/Users/seonmin/Documents/react with max/section22/src/App.js",[],"/Users/seonmin/Documents/react with max/section22/src/pages/HomePage.js",[],"/Users/seonmin/Documents/react with max/section22/src/pages/AuthPage.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/Layout/Layout.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/Profile/UserProfile.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/Layout/MainNavigation.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/Auth/AuthForm.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/StartingPage/StartingPageContent.js",[],"/Users/seonmin/Documents/react with max/section22/src/components/Profile/ProfileForm.js",[],"/Users/seonmin/Documents/react with max/section22/src/store/auth-context.js",["50"],"import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  //남은 시간을 밀리초로 리턴하기\n  const currentTime = new Date().getTime(); // 현재 시간\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const initialToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n  return {\n    token: retrieveStoredToken,\n    duration: remainingTime,\n  };\n};\n\n//인증 관련 상태를 관리\nexport const AuthContextProvider = (props) => {\n  // 다른 컴포넌트를 감싸는 래퍼로 활용하면 다른 컴포넌트가 AuthContext의 컨텍스트에 접근할 수 있다.\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token; // 토큰이 빈문자열이면 false, 빈문자열 아니면 true\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]); // 의존성 배열에 함수를 넣으면 무한루프에 빠지지 않도록 useCallback을 쓰자\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":22,"column":9,"nodeType":"57","messageId":"58","endLine":22,"endColumn":21},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'initialToken' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]